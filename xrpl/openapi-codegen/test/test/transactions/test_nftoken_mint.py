import unittest

from xrpl.models.exceptions import XRPLModelException
from xrpl.models.transactions.nftoken_mint import NFTokenMint
from xrpl.models.transactions.nftoken_mint import NFTokenMintFlag


class TestNFTokenMint(unittest.TestCase):
    def test_tx_invalid_transfer_fee_greater_than_max(self):
        with self.assertRaises(XRPLModelException) as err:
            NFTokenMint(
                account="rJ73aumLPTQQmy5wnGhvrogqf5DDhjuzc9",
                amount="12345",
                destination="AAAAA",
                expiration=5,
                flags=NFTokenMintFlag.TF_BURNABLE,
                issuer="AAAAA",
                nftoken_taxon=5,
                transfer_fee=50001,
                uri
            )
        self.assertIsNotNone(err.exception.args[0])

    def test_tx_invalid_missing_required_param_nftoken_taxon(self):
        with self.assertRaises(XRPLModelException) as err:
            NFTokenMint(
                account="rJ73aumLPTQQmy5wnGhvrogqf5DDhjuzc9",
                amount="12345",
                destination="AAAAA",
                expiration=5,
                flags=NFTokenMintFlag.TF_BURNABLE,
                issuer="AAAAA",
                transfer_fee=50000,
                uri
            )
        self.assertIsNotNone(err.exception.args[0])

    def test_tx_invalid_duplicate_issuer_and_account(self):
        with self.assertRaises(XRPLModelException) as err:
            NFTokenMint(
                account="rJ73aumLPTQQmy5wnGhvrogqf5DDhjuzc9",
                amount="12345",
                destination="AAAAA",
                expiration=5,
                flags=NFTokenMintFlag.TF_BURNABLE,
                issuer="rJ73aumLPTQQmy5wnGhvrogqf5DDhjuzc9",
                nftoken_taxon=5,
                transfer_fee=50000,
                uri
            )
        self.assertIsNotNone(err.exception.args[0])

    def test_tx_invalid_uri_too_long(self):
        with self.assertRaises(XRPLModelException) as err:
            NFTokenMint(
                account="rJ73aumLPTQQmy5wnGhvrogqf5DDhjuzc9",
                amount="12345",
                destination="AAAAA",
                expiration=5,
                flags=NFTokenMintFlag.TF_BURNABLE,
                issuer="AAAAA",
                nftoken_taxon=5,
                transfer_fee=50000,
                uri
            )
        self.assertIsNotNone(err.exception.args[0])

    def test_tx_invalid_account_is_not_xrp_account(self):
        with self.assertRaises(XRPLModelException) as err:
            NFTokenMint(
                account="G5h7Dk92LmXqZtP3NvB8YrCfJ0W1AoUE",
                amount="12345",
                destination="AAAAA",
                expiration=5,
                flags=NFTokenMintFlag.TF_BURNABLE,
                issuer="AAAAA",
                nftoken_taxon=5,
                transfer_fee=50000,
                uri
            )
        self.assertIsNotNone(err.exception.args[0])

    def test_tx_valid_transaction(self):
        tx = NFTokenMint(
            account="rJ73aumLPTQQmy5wnGhvrogqf5DDhjuzc9",
            amount="12345",
            destination="AAAAA",
            expiration=5,
            flags=NFTokenMintFlag.TF_BURNABLE,
            issuer="AAAAA",
            nftoken_taxon=5,
            transfer_fee=50000,
            uri
        )
        self.assertTrue(tx.is_valid())
